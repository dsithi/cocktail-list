{"version":3,"sources":["Components/Searchbar.js","Components/Navbar.js","Components/Item.js","Components/ItemList.js","Components/ItemPage.js","Components/Pagination.js","Components/FilterPage.js","Components/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onTabChange","setCocktails","useState","query","setQuery","searchItems","e","a","preventDefault","url","fetch","res","json","data","drinks","console","log","className","onSubmit","type","name","placeholder","autoComplete","value","onChange","target","onClick","Navbar","activeTab","handleRefresh","Item","setCocktail","strDrink","strAlcoholic","strCategory","strGlass","alt","src","strDrinkThumb","ItemList","items","map","idDrink","ItemPage","strMeasure1","strIngredient1","strMeasure2","strIngredient2","strMeasure3","strIngredient3","strMeasure4","strIngredient4","strMeasure5","strIngredient5","strMeasure6","strIngredient6","strMeasure7","strIngredient7","strMeasure8","strIngredient8","strMeasure9","strIngredient9","strMeasure10","strIngredient10","strMeasure11","strIngredient11","strMeasure12","strIngredient12","strMeasure13","strIngredient13","strMeasure14","strIngredient14","strMeasure15","strIngredient15","strInstructions","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","number","href","FilterPage","cocktails","filterName","setLoading","currentPage","setCurrentPage","useEffect","itemData","prevData","length","fetchItems","indexOfLastItem","indexOfFirstItem","currentItems","slice","pageNumber","Filter","setUrl","setFilterName","alcohol","setAlcohols","category","setCategories","ingredient","setIngredients","loading","isLoading","fetchData","set","color","item","index","replace","App","setTab","currentCocktail","handleTabChange","generateItems","randomItems","style","textAlign","renderContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.720b3a76.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst Searchbar = ({ onTabChange, setCocktails }) => {\r\n    // states for input\r\n    const [query, setQuery] = useState('');\r\n\r\n    // states for searched cocktails\r\n    //const [cocktails, setCocktails] = useState([]);\r\n\r\n    const searchItems = async (e) => {\r\n        e.preventDefault(); // avoid page refresh\r\n        \r\n        // test query\r\n        //const query = \"margarita\";\r\n\r\n        // api url for search by cocktail name\r\n        const url = `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${query}`;\r\n\r\n        try {\r\n            // wait for promise to finish code\r\n            const res = await fetch(url);\r\n            const data = await res.json(); // return promise\r\n\r\n            setCocktails(data.drinks);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={searchItems}>\r\n            <input className=\"input\" type=\"text\" name=\"query\" \r\n                placeholder=\"i.e. Margarita\" autoComplete=\"off\" \r\n                value={query} onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n            <button className=\"button\" type=\"submit\" onClick={()=> onTabChange(3)}>Search</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport Searchbar from './Searchbar';\r\n\r\nconst Navbar = ({ activeTab, onTabChange, handleRefresh, setCocktails }) => {\r\n    return (\r\n        <div className=\"nav\">\r\n            <h2 className=\"title\">Cocktail List</h2>\r\n            <h2\r\n                className=\"nav-item\"\r\n                onClick={() => {\r\n                    onTabChange(2);\r\n                    handleRefresh();\r\n                    }}>\r\n                Generate Random Cocktails\r\n            </h2>\r\n            <h2 className=\"nav-item\" onClick={() => onTabChange(4)}>Filter</h2> \r\n\r\n            <Searchbar onTabChange={onTabChange} setCocktails={setCocktails}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import React from 'react';\r\n\r\nconst Item = ({ data, onTabChange, setCocktail }) => {\r\n    return (\r\n        <div className=\"item\" \r\n             onClick={() => {\r\n                 onTabChange(1);\r\n                 setCocktail(data);\r\n                 \r\n             }}>\r\n            <div className=\"info\">\r\n                <h2 className=\"drink-name\">{data.strDrink}</h2>\r\n                <div className=\"type\">\r\n                    <p>{data.strAlcoholic}</p>\r\n                    <p>{data.strCategory}</p>\r\n                    <p>{data.strGlass}</p>\r\n                </div>\r\n            </div>\r\n            <div >\r\n                <img className=\"thumbnail\" alt={data.strDrink} src={data.strDrinkThumb} />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport Item from './Item';\r\n\r\nconst ItemList = ({ items, onTabChange, setCocktail }) => {\r\n    return (\r\n        <div className=\"item-list\">\r\n            {items ? \r\n                items.map(data => (\r\n                    <Item data={data} key={data.idDrink} alt={data.strDrink} onTabChange={onTabChange} setCocktail={setCocktail}/>\r\n                )) :\r\n                <p>No results found</p>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList;","import React from 'react';\r\n\r\nconst ItemPage = ({ data }) => {\r\n    return (\r\n        <div className=\"item-page\">\r\n            <div className=\"item-page-info\">\r\n                <h2 className=\"item-page-title\">{data.strDrink}</h2>\r\n                <div className=\"item-page-desc\">\r\n                    <p>{data.strCategory}</p>\r\n                    <p>{data.strAlcoholic}</p>\r\n                    <p>{data.strGlass}</p>\r\n                </div>\r\n                <div className=\"item-page-text\">\r\n                    <h2 className=\"item-page-subtitle\">Ingredients:</h2>\r\n                    <ul> \r\n                        {data.strMeasure1 ? <li>{data.strMeasure1} {data.strIngredient1}</li> : null}\r\n                        {data.strMeasure2 ? <li>{data.strMeasure2} {data.strIngredient2}</li> : null}\r\n                        {data.strMeasure3 ? <li>{data.strMeasure3} {data.strIngredient3}</li> : null}\r\n                        {data.strMeasure4 ? <li>{data.strMeasure4} {data.strIngredient4}</li> : null}\r\n                        {data.strMeasure5 ? <li>{data.strMeasure5} {data.strIngredient5}</li> : null}\r\n                        {data.strMeasure6 ? <li>{data.strMeasure6} {data.strIngredient6}</li> : null}\r\n                        {data.strMeasure7 ? <li>{data.strMeasure7} {data.strIngredient7}</li> : null}\r\n                        {data.strMeasure8 ? <li>{data.strMeasure8} {data.strIngredient8}</li> : null}\r\n                        {data.strMeasure9 ? <li>{data.strMeasure9} {data.strIngredient9}</li> : null}\r\n                        {data.strMeasure10 ? <li>{data.strMeasure10} {data.strIngredient10}</li> : null}\r\n                        {data.strMeasure11 ? <li>{data.strMeasure11} {data.strIngredient11}</li> : null}\r\n                        {data.strMeasure12 ? <li>{data.strMeasure12} {data.strIngredient12}</li> : null}\r\n                        {data.strMeasure13 ? <li>{data.strMeasure13} {data.strIngredient13}</li> : null}\r\n                        {data.strMeasure14 ? <li>{data.strMeasure14} {data.strIngredient14}</li> : null}\r\n                        {data.strMeasure15 ? <li>{data.strMeasure15} {data.strIngredient15}</li> : null}\r\n                    </ul>\r\n                    <h2 className=\"item-page-subtitle\">Directions:</h2>\r\n                    <ul>\r\n                        <li>{data.strInstructions}</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"item-page-image\">\r\n                <img alt={data.strDrink} src={data.strDrinkThumb} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemPage;","import React from 'react'\r\n\r\nexport const Pagination = ({ itemsPerPage, totalItems, paginate }) => {\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalItems/itemsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className=\"page-item\">\r\n                        <a href =\"/#\" onClick={() => paginate(number)} className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react'\r\nimport ItemList from './ItemList';\r\nimport Pagination from './Pagination';\r\n\r\n// Display All, or filtered cocktails (take in prop to determine)\r\nexport const FilterPage = ({ onTabChange, setCocktail, setCocktails, cocktails, url, filterName }) => {\r\n    // Create states\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [itemsPerPage] = useState(8);\r\n\r\n    // Call on mount\r\n    useEffect(() => {\r\n        setCocktails([]);\r\n        const fetchItems = async () => {\r\n            try { \r\n                setLoading(true);\r\n\r\n                // look for cocktail info\r\n                const res = await fetch(url+filterName);\r\n                const data = await res.json();\r\n               \r\n                // loop through each item in array and search for its data b/c only partial given\r\n                for (let i = 0; i < data.drinks.length; i++) {\r\n                    const res = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${data.drinks[i].idDrink}`);\r\n                    const itemData = await res.json();\r\n\r\n                    // Push data to cocktails array\r\n                    setCocktails(prevData => [...prevData, ...itemData.drinks]);  \r\n                }\r\n\r\n                setLoading(false);\r\n\r\n               } catch(err) {\r\n                  console.log(err);\r\n                } \r\n        };\r\n\r\n        fetchItems();\r\n    }, []);\r\n    \r\n    // get current items\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = cocktails.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n\r\n    // change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    return (\r\n        <div>\r\n            {currentItems ?  \r\n            <>\r\n                <ItemList items={currentItems} onTabChange={onTabChange} setCocktail={setCocktail} />\r\n                <Pagination itemsPerPage={itemsPerPage} totalItems={cocktails.length} paginate={paginate} />\r\n            </> : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterPage;","import React, { useState, useEffect } from 'react'\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst Filter = ({ onTabChange, setUrl, setFilterName }) => {\r\n    // Get Filter data for Alcohol type, Category, Ingredient\r\n    const [alcohol, setAlcohols] = useState([]);\r\n    const [category, setCategories] = useState([]);\r\n    const [ingredient, setIngredients] = useState([]);\r\n\r\n    // url data\r\n    const alcoholUrl = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?a=list\";\r\n    const categoryUrl = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\";\r\n    const ingredientUrl = \"https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list\";\r\n\r\n    // loading state\r\n    const [loading, isLoading] = useState(true);\r\n\r\n\r\n    // fetch data from api\r\n    const fetchData = async (url, set) => {\r\n        try {\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            set(data.drinks);\r\n            isLoading(false);\r\n        } catch(err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    // call function for each filter\r\n    useEffect(() => {\r\n        fetchData(alcoholUrl, setAlcohols);\r\n        fetchData(categoryUrl, setCategories);\r\n        fetchData(ingredientUrl, setIngredients);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loading ? \r\n            \r\n            <ReactLoading type={\"balls\"} color={\"#ccc\"}/> :\r\n            <div className=\"filters\">\r\n            <h3>Alcoholic:</h3>\r\n            <ul className=\"filter\">\r\n                {alcohol.map((item, index) => (\r\n                    <li \r\n                        key={index}\r\n                        onClick={() => {\r\n                            setFilterName(item.strAlcoholic.replace(/ /g, \"_\"));\r\n                            setUrl(\"https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=\");\r\n                            onTabChange(5);\r\n                        }}\r\n                    >\r\n                        {item.strAlcoholic}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <h3>Category:</h3>\r\n            <ul className=\"filter\">\r\n                {category.map((item, index) => (\r\n                    <li \r\n                    key={index}\r\n                    onClick={() => {\r\n                        setFilterName(item.strCategory.replace(/ /g, \"_\"));\r\n                        setUrl(\"https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=\");\r\n                        onTabChange(5);\r\n                    }}\r\n                >\r\n                    {item.strCategory}\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            <h3>Ingredient:</h3>\r\n            <ul className=\"filter\">\r\n                {ingredient.map((item, index) => (\r\n                    <li \r\n                    key={index}\r\n                    onClick={() => {\r\n                        setFilterName(item.strIngredient1.replace(/ /g, \"_\"));\r\n                        setUrl(\"https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=\");\r\n                        onTabChange(5);\r\n                    }}\r\n                >\r\n                    {item.strIngredient1}\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Filter;\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Components/Navbar';\nimport ItemList from './Components/ItemList';\nimport ItemPage from './Components/ItemPage';\nimport FilterPage from './Components/FilterPage';\nimport Filter from './Components/Filter';\n\nfunction App() {\n  // re render component\n  const handleRefresh = () => {\n    setCocktails([]);\n    generateItems();\n  }\n\n  /* --- keep track of current page ---*/\n  // state for active tab to display correct page\n  const [activeTab, setTab] = useState(0);\n\n  // state for clicked cocktail\n  const [currentCocktail, setCocktail] = useState([]);\n\n  // States for filter\n  const [url, setUrl] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n\n  // function to handle tab changes, pass to navbar\n  const handleTabChange = (index) => {\n    setTab(index);\n  }\n\n  // switch statement to determine which page is rendered\n  const renderContent = () => {\n    switch(activeTab) {\n      default:\n      case 0: // return to start page with previous random cocktails\n          return (\n            <>\n              <p style={{textAlign: \"center\"}}>Cocktails</p>\n              <ItemList items={cocktails} onTabChange={handleTabChange} setCocktail={setCocktail}/>\n            </>\n          );\n      case 1: // Item page\n          return (\n            <ItemPage data={currentCocktail}/>\n          );\n      case 2: // generate new random cocktails\n            return (\n            <>\n              <p className=\"page-title\" style={{textAlign: \"center\"}}>Random Cocktails</p>\n              <ItemList items={cocktails} onTabChange={handleTabChange} setCocktail={setCocktail}/>\n            </>\n            );\n      case 3: // Search results page\n              return (\n                <>\n                  <ItemList items={cocktails} onTabChange={handleTabChange} setCocktail={setCocktail}/>\n                </>\n              );\n      case 4: // Filters Page\n                return (\n                  <>\n                    <Filter onTabChange={handleTabChange} setUrl={setUrl} setFilterName={setFilterName} />\n                  </>\n                );\n      case 5: // Filter Items Page\n                return (\n                  <>\n                    <FilterPage onTabChange={handleTabChange} setCocktail={setCocktail} cocktails={cocktails} setCocktails={setCocktails} cocktails={cocktails} url={url} filterName={filterName} />\n                  </>\n                );\n    }\n  }\n\n  /* --- Generate random cocktails --- */\n  // states for random cocktails\n  const [cocktails, setCocktails] = useState([]);\n\n\n  // function to generate cocktails\nconst generateItems = () => {\n      // reset state to generate new cocktails\n      if (cocktails.length >= 8) {\n        setCocktails([]);\n      } \n\n      // random cocktail from api\n      const url = \"https://www.thecocktaildb.com/api/json/v1/1/random.php\";\n    \n      // function to call random items from api\n      const randomItems = async () => {\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n  \n        // push new items to array\n        setCocktails(prevData => [...prevData, ...data.drinks]);  \n       } catch(err) {\n          console.log(err);\n        } \n      }\n  \n      // 4 random cocktails\n      for (let i = 0; i < 8; i++) {\n          randomItems();\n      }\n  \n     \n}\n\n  // call function on render with useEffect\n  useEffect(() => {\n    generateItems();\n  }, []);\n\n\n  return (\n    <div className=\"container\">\n      <Navbar activeTab={activeTab} onTabChange={handleTabChange} handleRefresh={handleRefresh} setCocktails={setCocktails} />\n      { /*\n        <p style={{textAlign: \"center\"}}>Random Cocktails</p>\n        <ItemList items={cocktails}/>\n      */ }\n      {renderContent()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}